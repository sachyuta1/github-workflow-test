---
# Source: project-management-api/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: test-secret
  labels:
    helm.sh/chart: project-management-api-0.1.0
    app.kubernetes.io/name: project-management-api
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
  DATABASE_USER: cG9zdGdyZXM=
  DATABASE_PASSWORD: bXlzZWNyZXRwYXNzd29yZA==
  REDIS_PASSWORD: T1dSd1EwVXliSEpvYUE9PQ==
  NATS_USERNAME: bmF0c191c2Vy
  NATS_PASSWORD: ZXdvZ0lDSjFjbXdpT2lBaWJtRjBjem92TDIxNUxXNWhkSE1pQ24wSw==
  MINIO_ACCESS_KEY: WVdSdGFXND0=
  MINIO_SECRET_KEY: ZGtGeFlsZFJPV3ROTnc9PQ==
  JWT_SECRET: YTNmOGMxZTJkNGI1Njc4OWFiY2RlZjAxMjM0NTY3ODlhYmNkZWYwMTIzNDU2Nzg5YWJjZGVmMDEyMzQ1Njc4OQ==
---
# Source: project-management-api/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-config
  labels:
    helm.sh/chart: project-management-api-0.1.0
    app.kubernetes.io/name: project-management-api
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
data:
  DATABASE_HOST: "postgres"
  DATABASE_PORT: "5432"
  DATABASE_NAME: "postgres"
  USE_REDIS: "true"
  REDIS_HOST: "my-redis-master"
  REDIS_PORT: "6379"
  NATS_HOST: "my-nats-headless"
  NATS_PORT: "4222"
  USE_MINIO: "true"
  MINIO_ENDPOINT: "10.1.149.20:9000"
  MINIO_SSL: "false"
  MODE: "debug"
  CONTAINER_PORT: "9194"
  SERVER_HOST: "localhost"
---
# Source: project-management-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-project-management-api
  labels:
    helm.sh/chart: project-management-api-0.1.0
    app.kubernetes.io/name: project-management-api
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: 9194
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: project-management-api
    app.kubernetes.io/instance: test
---
# Source: project-management-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-project-management-api
  labels:
    helm.sh/chart: project-management-api-0.1.0
    app.kubernetes.io/name: project-management-api
    app.kubernetes.io/instance: test
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: project-management-api
      app.kubernetes.io/instance: test
  template:
    metadata:
      labels:
        helm.sh/chart: project-management-api-0.1.0
        app.kubernetes.io/name: project-management-api
        app.kubernetes.io/instance: test
        app.kubernetes.io/version: "1.16.0"
        app.kubernetes.io/managed-by: Helm
    spec:
      imagePullSecrets:
        - name: devsds-dockerhub-creds   # Image pull secret
      serviceAccountName: default
      securityContext:
        {}
      containers:
        - name: project-management-api
          securityContext:
            {}
          image: "devsds/project-management-api:v0.0.16"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 9194
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            requests:
              cpu: "250m"
              memory: "512Mi"
            limits:
              cpu: "500m"
              memory: "1Gi"
          env:
            - name: DATABASE_HOST
              valueFrom:
                configMapKeyRef:
                  name: test-config
                  key: DATABASE_HOST
            - name: DATABASE_PORT
              valueFrom:
                configMapKeyRef:
                  name: test-config
                  key: DATABASE_PORT
            - name: DATABASE_NAME
              valueFrom:
                configMapKeyRef:
                  name: test-config
                  key: DATABASE_NAME
            - name: USE_REDIS
              valueFrom:
                configMapKeyRef:
                  name: test-config
                  key: USE_REDIS
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: test-config
                  key: REDIS_HOST
            - name: REDIS_PORT
              valueFrom:
                configMapKeyRef:
                  name: test-config
                  key: REDIS_PORT
            - name: NATS_HOST
              valueFrom:
                configMapKeyRef:
                  name: test-config
                  key: NATS_HOST
            - name: NATS_PORT
              valueFrom:
                configMapKeyRef:
                  name: test-config
                  key: NATS_PORT
            - name: USE_MINIO
              valueFrom:
                configMapKeyRef:
                  name: test-config
                  key: USE_MINIO
            - name: MINIO_ENDPOINT
              valueFrom:
                configMapKeyRef:
                  name: test-config
                  key: MINIO_ENDPOINT
            - name: MINIO_SSL
              valueFrom:
                configMapKeyRef:
                  name: test-config
                  key: MINIO_SSL
            - name: MODE
              valueFrom:
                configMapKeyRef:
                  name: test-config
                  key: MODE
            - name: DATABASE_USER
              valueFrom:
                secretKeyRef:
                  name: test-secret
                  key: DATABASE_USER
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: test-secret
                  key: DATABASE_PASSWORD
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: test-secret
                  key: REDIS_PASSWORD
            - name: NATS_USERNAME
              valueFrom:
                secretKeyRef:
                  name: test-secret
                  key: NATS_USERNAME
            - name: NATS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: test-secret
                  key: NATS_PASSWORD
            - name: MINIO_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: test-secret
                  key: MINIO_ACCESS_KEY
            - name: ServerHost
              valueFrom:
                secretKeyRef:
                  name: test-secret
                  key: ServerHost
            - name: JWTSecret
              valueFrom:
                secretKeyRef:
                  name: test-secret
                  key: JWTSecret
            - name: MINIO_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: test-secret
                  key: MINIO_SECRET_KEY
          volumeMounts:
            []
